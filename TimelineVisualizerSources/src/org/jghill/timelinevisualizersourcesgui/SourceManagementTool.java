package org.jghill.timelinevisualizersourcesgui;

import org.jghill.timelinevisualizersources.SourceCollection;
import org.jghill.timelinevisualizersources.SourceTableModel;

/**
 * A dialog box for managing sources.
 * 
 * @author JGHill
 */
public class SourceManagementTool extends javax.swing.JDialog {

    /**
     * Creates new form SourceManagementTool
     */
    public SourceManagementTool(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SourceManagementNewButton = new javax.swing.JButton();
        SourceManagementEditButton = new javax.swing.JButton();
        SourceManagementDeleteButton = new javax.swing.JButton();
        SourceManagementScrollPane = new javax.swing.JScrollPane();
        SourceManagementSourceTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Source Management Tool"); // NOI18N
        setPreferredSize(new java.awt.Dimension(400, 200));
        setResizable(false);

        org.openide.awt.Mnemonics.setLocalizedText(SourceManagementNewButton, org.openide.util.NbBundle.getMessage(SourceManagementTool.class, "SourceManagementTool.SourceManagementNewButton.text")); // NOI18N
        SourceManagementNewButton.setToolTipText(org.openide.util.NbBundle.getMessage(SourceManagementTool.class, "SourceManagementTool.SourceManagementNewButton.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(SourceManagementEditButton, org.openide.util.NbBundle.getMessage(SourceManagementTool.class, "SourceManagementTool.SourceManagementEditButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(SourceManagementDeleteButton, org.openide.util.NbBundle.getMessage(SourceManagementTool.class, "SourceManagementTool.SourceManagementDeleteButton.text")); // NOI18N

        SourceManagementScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        SourceManagementScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        SourceManagementScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SourceManagementScrollPane.setHorizontalScrollBar(null);
        SourceManagementScrollPane.setMaximumSize(new java.awt.Dimension(380, 140));
        SourceManagementScrollPane.setMinimumSize(new java.awt.Dimension(380, 140));
        SourceManagementScrollPane.setPreferredSize(new java.awt.Dimension(380, 140));

        SourceManagementSourceTable.setModel(new SourceTableModel(SourceCollection.getInstance()));
        SourceManagementSourceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        SourceManagementSourceTable.setMaximumSize(new java.awt.Dimension(380, 140));
        SourceManagementSourceTable.setMinimumSize(new java.awt.Dimension(380, 140));
        SourceManagementSourceTable.setPreferredSize(new java.awt.Dimension(380, 140));
        SourceManagementScrollPane.setViewportView(SourceManagementSourceTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SourceManagementNewButton)
                        .addGap(18, 18, 18)
                        .addComponent(SourceManagementEditButton)
                        .addGap(18, 18, 18)
                        .addComponent(SourceManagementDeleteButton))
                    .addComponent(SourceManagementScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SourceManagementScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SourceManagementNewButton)
                    .addComponent(SourceManagementEditButton)
                    .addComponent(SourceManagementDeleteButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SourceManagementTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SourceManagementTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SourceManagementTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SourceManagementTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SourceManagementTool dialog = new SourceManagementTool(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SourceManagementDeleteButton;
    private javax.swing.JButton SourceManagementEditButton;
    private javax.swing.JButton SourceManagementNewButton;
    private javax.swing.JScrollPane SourceManagementScrollPane;
    private javax.swing.JTable SourceManagementSourceTable;
    // End of variables declaration//GEN-END:variables
}
